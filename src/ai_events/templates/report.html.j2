<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AI Events Report - {{ report.generated_at }}</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            line-height: 1.6;
            color: #333;
            background: #f8f9fa;
            padding: 20px;
            scroll-behavior: smooth;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: white;
            border-radius: 12px;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
            overflow: hidden;
        }
        
        .header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 30px;
            text-align: center;
        }
        
        .header h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
            font-weight: 700;
        }
        
        .header p {
            font-size: 1.1rem;
            opacity: 0.9;
        }
        
        .content {
            padding: 30px;
        }
        
        .filters {
            background: white;
            padding: 20px 30px;
            border-radius: 10px;
            margin-bottom: 35px;
            display: flex;
            gap: 20px;
            align-items: center;
            justify-content: center;
            flex-wrap: wrap;
            border: 1px solid #e1e8ed;
            box-shadow: 0 1px 3px rgba(0,0,0,0.05);
        }
        
        .filter-group {
            display: flex;
            align-items: center;
            gap: 8px;
        }
        
        .filter-group label {
            font-weight: 500;
            color: #64748b;
            font-size: 0.85rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        
        .filter-select {
            padding: 10px 14px;
            border: 1px solid #e2e8f0;
            border-radius: 8px;
            font-size: 0.9rem;
            background: #f8fafc;
            color: #334155;
            cursor: pointer;
            transition: all 0.2s ease;
            min-width: 150px;
            font-weight: 500;
        }
        
        .filter-select[multiple] {
            height: 80px;
            overflow-y: auto;
        }
        
        .filter-select:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }
        
        .filter-select:hover {
            background: white;
            box-shadow: 0 1px 3px rgba(102, 126, 234, 0.2);
        }
        
        .filter-reset {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            padding: 10px 24px;
            border-radius: 6px;
            cursor: pointer;
            font-weight: 600;
            font-size: 0.9rem;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        
        .filter-reset:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);
        }
        
        /* Mobile responsive filters */
        @media (max-width: 768px) {
            .filters {
                flex-direction: column;
                align-items: stretch;
                gap: 12px;
                padding: 15px;
            }
            
            .filter-group {
                width: 100%;
                display: flex;
                flex-direction: column;
                gap: 6px;
            }
            
            .filter-group label {
                font-size: 0.85rem;
            }
            
            .filter-group select {
                width: 100%;
                padding: 10px;
                font-size: 0.95rem;
            }
            
            .filter-reset {
                width: 100%;
                padding: 12px;
                margin-top: 8px;
            }
        }
        
        .event-card.hidden {
            display: none;
        }
        
        .section {
            margin-bottom: 40px;
        }
        
        .section h2 {
            font-size: 1.8rem;
            margin-bottom: 20px;
            color: #2c3e50;
            border-bottom: 3px solid #667eea;
            padding-bottom: 10px;
        }
        
        .events-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
            align-items: stretch;
        }
        
        .event-card {
            background: white;
            border-radius: 12px;
            padding: 18px;
            box-shadow: 0 2px 15px rgba(0,0,0,0.08);
            transition: all 0.3s ease;
            position: relative;
            display: flex;
            flex-direction: column;
            height: 320px;
        }
        
        .event-header {
            flex: 0 0 auto;
            height: 110px;
            display: flex;
            flex-direction: column;
            justify-content: flex-start;
        }
        
        .event-content {
            flex: 1 1 auto;
            display: flex;
            flex-direction: column;
            overflow: hidden;
        }
        
        .event-footer {
            flex: 0 0 auto;
            margin-top: auto;
            padding-top: 8px;
            height: 50px;
            display: flex;
            flex-direction: column;
            justify-content: flex-end;
        }
        
        .event-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.1);
        }
        
        .event-card.priority-go {
            border-left: 4px solid #27ae60;
        }
        
        .event-card.priority-maybe {
            border-left: 4px solid #f39c12;
        }
        
        
        .event-title {
            font-size: 1.1rem;
            font-weight: 600;
            margin-bottom: 6px;
            color: #2c3e50;
            line-height: 1.3;
            height: 45px;
            overflow: hidden;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
        }
        
        .event-date {
            font-size: 0.9rem;
            color: #7f8c8d;
            margin-bottom: 6px;
        }
        
        .event-location {
            font-size: 0.95rem;
            color: #34495e;
            margin-bottom: 10px;
        }
        
        .event-info {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            font-size: 0.85rem;
            color: #7f8c8d;
            margin-bottom: 8px;
        }
        
        .event-tags {
            display: flex;
            flex-wrap: wrap;
            gap: 3px;
            margin-bottom: 8px;
            height: 45px;
            align-content: flex-start;
            overflow: hidden;
        }
        
        .tag {
            background: #ecf0f1;
            color: #2c3e50;
            padding: 3px 6px;
            border-radius: 4px;
            font-size: 0.7rem;
            white-space: nowrap;
            flex-shrink: 0;
        }
        
        .tag.tier-flagship {
            background: #e8f5e8;
            color: #27ae60;
        }
        
        .tag.tier-major {
            background: #fff3cd;
            color: #856404;
        }
        
        .priority-badge {
            position: absolute;
            top: 15px;
            right: 15px;
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
        }
        
        .priority-go {
            background: #d4edda;
            color: #155724;
        }
        
        .priority-maybe {
            background: #fff3cd;
            color: #856404;
        }
        
        .event-links {
            display: flex;
            gap: 10px;
            margin-top: 12px;
        }
        
        .btn {
            padding: 8px 16px;
            border-radius: 6px;
            text-decoration: none;
            font-size: 0.9rem;
            font-weight: 500;
            transition: all 0.3s ease;
        }
        
        .btn-primary {
            background: #667eea;
            color: white;
        }
        
        .btn-primary:hover {
            background: #5a6fd8;
        }
        
        .btn-secondary {
            background: #6c757d;
            color: white;
        }
        
        .btn-secondary:hover {
            background: #5a6268;
        }
        
        .speakers-list {
            margin-top: auto;
            margin-bottom: 12px;
            font-size: 0.9rem;
            color: #6c757d;
        }
        
        .event-links {
            margin-top: auto;
        }
        
        .speakers-list strong {
            color: #495057;
        }
        
        .minor-events {
            background: #f8f9fa;
            border-left: 4px solid #6c757d;
            position: relative;
        }
        
        .minor-events-list {
            margin-top: 15px;
            max-height: 200px;
            overflow-y: auto;
            padding-right: 10px;
            position: relative;
        }
        
        /* Scrollbar styling for better visibility */
        .minor-events-list::-webkit-scrollbar {
            width: 8px;
        }
        
        .minor-events-list::-webkit-scrollbar-track {
            background: #e9ecef;
            border-radius: 4px;
        }
        
        .minor-events-list::-webkit-scrollbar-thumb {
            background: #6c757d;
            border-radius: 4px;
        }
        
        .minor-events-list::-webkit-scrollbar-thumb:hover {
            background: #495057;
        }
        
        /* Scroll indicators */
        .minor-events::after {
            content: "⬇ Scroll for more events";
            position: absolute;
            bottom: 10px;
            right: 15px;
            font-size: 0.7rem;
            color: #6c757d;
            background: rgba(248, 249, 250, 0.9);
            padding: 2px 6px;
            border-radius: 3px;
            pointer-events: none;
            opacity: 0.8;
        }
        
        /* Fade effect at bottom to indicate more content */
        .minor-events-list::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            height: 20px;
            background: linear-gradient(transparent, rgba(248, 249, 250, 0.8));
            pointer-events: none;
        }
        
        .minor-event-item {
            margin-bottom: 10px;
            padding-bottom: 8px;
            border-bottom: 1px solid #e9ecef;
            font-family: var(--font-family);
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
        }
        
        .minor-event-item:last-child {
            border-bottom: none;
            margin-bottom: 0;
        }
        
        .minor-event-link {
            color: #5a6fd8;
            text-decoration: none;
            font-weight: 600;
            font-size: 0.95em;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
        }
        
        .minor-event-link:hover {
            text-decoration: underline;
        }
        
        .minor-event-date {
            font-size: 0.85em;
            color: #495057;
            margin-top: 4px;
            font-weight: 500;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
        }
        
        .minor-event-organizer {
            font-size: 0.8em;
            color: #6c757d;
            margin-top: 2px;
            font-weight: 500;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
        }
        
        .new-badge {
            background: #dc3545;
            color: white;
            padding: 2px 6px;
            border-radius: 3px;
            font-size: 0.7rem;
            font-weight: 600;
            margin-left: 8px;
        }
        
        .stats {
            display: flex;
            justify-content: center;
            gap: 30px;
            margin-bottom: 40px;
            flex-wrap: wrap;
        }
        
        .stat-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 30px 40px;
            border-radius: 16px;
            text-align: center;
            transition: all 0.3s ease;
            cursor: pointer;
            text-decoration: none;
            box-shadow: 0 4px 20px rgba(102, 126, 234, 0.3);
            width: 280px;
            position: relative;
            overflow: hidden;
        }
        
        .stat-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(135deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0) 100%);
            opacity: 0;
            transition: opacity 0.3s ease;
        }
        
        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 12px 35px rgba(102, 126, 234, 0.4);
        }
        
        .stat-card:hover::before {
            opacity: 1;
        }
        
        .stat-card:nth-child(2) {
            background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
            box-shadow: 0 4px 20px rgba(245, 87, 108, 0.3);
        }
        
        .stat-card:nth-child(2):hover {
            box-shadow: 0 12px 35px rgba(245, 87, 108, 0.4);
        }
        
        .stat-number {
            font-size: 3rem;
            font-weight: 800;
            color: white;
            margin-bottom: 8px;
            text-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        
        .stat-label {
            color: rgba(255,255,255,0.9);
            font-size: 1.1rem;
            font-weight: 600;
            margin-bottom: 8px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        
        .stat-breakdown {
            color: rgba(255,255,255,0.8);
            font-size: 0.9rem;
            line-height: 1.3;
            font-weight: 500;
        }
        
        @media (max-width: 768px) {
            .events-grid {
                grid-template-columns: 1fr;
            }
            
            .header h1 {
                font-size: 2rem;
            }
            
            .content {
                padding: 20px;
            }
            
            .stats {
                flex-direction: column;
                align-items: center;
                gap: 20px;
            }
            
            .stat-card {
                width: 280px;
                padding: 25px 30px;
            }
            
            .stat-number {
                font-size: 2.5rem;
            }
            
            .stat-label {
                font-size: 1rem;
            }
            
            .stat-breakdown {
                font-size: 0.85rem;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>AI Events Report</h1>
            <p>{{ report.horizon_label }} • Generated {{ report.generated_at }}</p>
        </div>
        
        <div class="content">
            <!-- Filters -->
            <div class="filters">
                <div class="filter-group">
                    <label for="cityFilter">Filter by City:</label>
                    <select id="cityFilter" class="filter-select" multiple size="4">
                    </select>
                </div>
                <div class="filter-group">
                    <label for="tagFilter">Filter by Tag:</label>
                    <select id="tagFilter" class="filter-select" multiple size="4">
                    </select>
                </div>
                <button class="filter-reset" onclick="resetFilters()">Reset Filters</button>
            </div>
            
            <!-- Statistics -->
            <div class="stats">
                <a href="#us-events" class="stat-card">
                    <div class="stat-number">{{ report.us_events|length }}</div>
                    <div class="stat-label">US Events</div>
                    <div class="stat-breakdown">{{ report.us_flagship|length }} flagship, {{ report.us_major|length }} major, {{ report.us_other|length }} other</div>
                </a>
                <a href="#intl-events" class="stat-card">
                    <div class="stat-number">{{ report.intl_events|length }}</div>
                    <div class="stat-label">International Events</div>
                    <div class="stat-breakdown">{{ report.intl_flagship|length }} flagship, {{ report.intl_major|length }} major, {{ report.intl_other|length }} other</div>
                </a>
            </div>
            
            
            <!-- US Events -->
            {% if report.us_events %}
            <div class="section" id="us-events">
                <h2>🇺🇸 US Events</h2>
                <div class="events-grid">
                    {% for event in report.us_events %}
                    {% if (event.size_profile and event.size_profile.tier in ['flagship', 'major']) or event.emerging_flagship %}
                    <div class="event-card {% if event.priority == 'go' %}priority-go{% else %}priority-maybe{% endif %}" data-city="{{ event.city }}" data-tags="{% if event.size_profile %}{{ event.size_profile.tier|title }}{% endif %}{% if event.emerging_flagship %} Flagship{% endif %} {{ event.format|title }}{% for theme in event.tracks_themes[:3] %} {{ theme }}{% endfor %}">
                        <div class="event-header">
                            <div class="event-title">{{ event.name }}</div>
                            <div class="event-date">{{ event.start_date }} - {{ event.end_date }}</div>
                            <div class="event-location">📍 {{ event.city }}{% if event.state_province %}, {{ event.state_province }}{% endif %}</div>
                        </div>
                        
                        <div class="event-content">
                            <div class="event-tags">
                                {% if event.size_profile %}
                                <span class="tag tier-{{ event.size_profile.tier }}">{{ event.size_profile.tier|title }}</span>
                                {% endif %}
                                {% if event.emerging_flagship %}
                                <span class="tag tier-flagship">Flagship</span>
                                {% endif %}
                                <span class="tag">{{ event.format|title }}</span>
                                {% for theme in event.tracks_themes[:2] %}
                                <span class="tag">{{ theme }}</span>
                                {% endfor %}
                            </div>
                        </div>
                        
                        <div class="event-footer">
                            <div class="event-links">
                                <a href="{{ event.site_url }}" class="btn btn-primary" target="_blank">Visit Site</a>
                                {% if event.register_url %}
                                <a href="{{ event.register_url }}" class="btn btn-secondary" target="_blank">Register</a>
                                {% endif %}
                            </div>
                        </div>
                    </div>
                    {% endif %}
                    {% endfor %}
                    
                    <!-- Minor Events Tile -->
                    {% if report.us_other %}
                    <div class="event-card minor-events" data-city="Multiple" data-tags="Other">
                        <div class="event-title">📋 Other US Events ({{ report.us_other|length }})</div>
                        <div class="minor-events-list">
                            {% for event in report.us_other %}
                            <div class="minor-event-item" data-city="{{ event.city }}" data-tags="{% if event.size_profile %}{{ event.size_profile.tier|title }}{% endif %} {{ event.format|title }}{% for theme in event.tracks_themes[:3] %} {{ theme }}{% endfor %}">
                                <a href="{{ event.site_url }}" target="_blank" class="minor-event-link">{{ event.name }}</a>
                                <div class="minor-event-date">{{ event.start_date }} • {{ event.city }}{% if event.state_province %}, {{ event.state_province }}{% endif %}</div>
                                {% if event.site_url %}
                                <div class="minor-event-organizer">Organizer: {{ event.site_url|replace('https://', '')|replace('http://', '')|replace('www.', '') }}</div>
                                {% endif %}
                            </div>
                            {% endfor %}
                        </div>
                    </div>
                    {% endif %}
                </div>
            </div>
            {% endif %}
            
            <!-- International Events -->
            {% if report.intl_events %}
            <div class="section" id="intl-events">
                <h2>🌍 International Events</h2>
                <div class="events-grid">
                    {% for event in report.intl_events %}
                    {% if (event.size_profile and event.size_profile.tier in ['flagship', 'major']) or event.emerging_flagship %}
                    <div class="event-card {% if event.priority == 'go' %}priority-go{% else %}priority-maybe{% endif %}" data-city="{{ event.city }}" data-tags="{% if event.size_profile %}{{ event.size_profile.tier|title }}{% endif %}{% if event.emerging_flagship %} Flagship{% endif %} {{ event.format|title }}{% for theme in event.tracks_themes[:3] %} {{ theme }}{% endfor %}">
                        <div class="event-header">
                            <div class="event-title">{{ event.name }}</div>
                            <div class="event-date">{{ event.start_date }} - {{ event.end_date }}</div>
                            <div class="event-location">📍 {{ event.city }}, {{ event.country }}</div>
                        </div>
                        
                        <div class="event-content">
                            <div class="event-tags">
                                {% if event.size_profile %}
                                <span class="tag tier-{{ event.size_profile.tier }}">{{ event.size_profile.tier|title }}</span>
                                {% endif %}
                                {% if event.emerging_flagship %}
                                <span class="tag tier-flagship">Flagship</span>
                                {% endif %}
                                <span class="tag">{{ event.format|title }}</span>
                                {% for theme in event.tracks_themes[:2] %}
                                <span class="tag">{{ theme }}</span>
                                {% endfor %}
                            </div>
                        </div>
                        
                        <div class="event-footer">
                            <div class="event-links">
                                <a href="{{ event.site_url }}" class="btn btn-primary" target="_blank">Visit Site</a>
                                {% if event.register_url %}
                                <a href="{{ event.register_url }}" class="btn btn-secondary" target="_blank">Register</a>
                                {% endif %}
                            </div>
                        </div>
                    </div>
                    {% endif %}
                    {% endfor %}
                    
                    <!-- Minor Events Tile -->
                    {% if report.intl_other %}
                    <div class="event-card minor-events" data-city="Multiple" data-tags="Other">
                        <div class="event-title">📋 Other International Events ({{ report.intl_other|length }})</div>
                        <div class="minor-events-list">
                            {% for event in report.intl_other %}
                            <div class="minor-event-item" data-city="{{ event.city }}" data-tags="{% if event.size_profile %}{{ event.size_profile.tier|title }}{% endif %} {{ event.format|title }}{% for theme in event.tracks_themes[:3] %} {{ theme }}{% endfor %}">
                                <a href="{{ event.site_url }}" target="_blank" class="minor-event-link">{{ event.name }}</a>
                                <div class="minor-event-date">{{ event.start_date }} • {{ event.city }}, {{ event.country }}</div>
                                {% if event.site_url %}
                                <div class="minor-event-organizer">Organizer: {{ event.site_url|replace('https://', '')|replace('http://', '')|replace('www.', '') }}</div>
                                {% endif %}
                            </div>
                            {% endfor %}
                        </div>
                    </div>
                    {% endif %}
                </div>
            </div>
            {% endif %}
            
        </div>
    </div>
    
    <!-- Scroll to Top Button -->
    <div id="scrollToTop" class="scroll-to-top">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 4L4 12H8V20H16V12H20L12 4Z" fill="currentColor"/>
        </svg>
    </div>
    
    <style>
        .scroll-to-top {
            position: fixed;
            bottom: 30px;
            right: 30px;
            width: 50px;
            height: 50px;
            background: #007bff;
            color: white;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            box-shadow: 0 4px 12px rgba(0, 123, 255, 0.3);
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;
            z-index: 1000;
        }
        
        .scroll-to-top:hover {
            background: #0056b3;
            transform: translateY(-2px);
            box-shadow: 0 6px 16px rgba(0, 123, 255, 0.4);
        }
        
        .scroll-to-top.visible {
            opacity: 1;
            visibility: visible;
        }
        
        /* Custom scrollbar for webkit browsers */
        ::-webkit-scrollbar {
            width: 16px;
        }
        
        ::-webkit-scrollbar-track {
            background: #e8e8e8;
            border-radius: 8px;
            border: 1px solid #d0d0d0;
        }
        
        ::-webkit-scrollbar-thumb {
            background: #007bff;
            border-radius: 8px;
            border: 2px solid #e8e8e8;
            min-height: 40px;
        }
        
        ::-webkit-scrollbar-thumb:hover {
            background: #0056b3;
            border: 2px solid #d0d0d0;
        }
        
        ::-webkit-scrollbar-thumb:active {
            background: #004085;
        }
    </style>
    
    <script>
        // Populate filter dropdowns
        function populateFilters() {
            const cityFilter = document.getElementById('cityFilter');
            const tagFilter = document.getElementById('tagFilter');
            
            const cities = new Set();
            const allTagsMap = new Map(); // Map city to its tags
            
            // Get tags from visible span elements in event cards
            const eventCards = document.querySelectorAll('.event-card[data-city]');
            eventCards.forEach(card => {
                const city = card.getAttribute('data-city');
                
                if (city && city !== 'Multiple') {
                    cities.add(city);
                    
                    // Get actual theme tags from the span elements
                    const tagSpans = card.querySelectorAll('.event-tags .tag');
                    if (!allTagsMap.has(city)) {
                        allTagsMap.set(city, new Set());
                    }
                    
                    tagSpans.forEach(span => {
                        const tagText = span.textContent.trim();
                        // Only include theme tags, not tier/format tags
                        if (tagText && 
                            !['Flagship', 'Major', 'Focused', 'Live', 'Virtual', 'Hybrid'].includes(tagText) &&
                            !span.classList.contains('tier-flagship') &&
                            !span.classList.contains('tier-major') &&
                            !span.classList.contains('tier-focused')) {
                            allTagsMap.get(city).add(tagText);
                        }
                    });
                }
            });
            
            // Also check minor event items
            const minorEventItems = document.querySelectorAll('.minor-event-item[data-city]');
            minorEventItems.forEach(item => {
                const city = item.getAttribute('data-city');
                if (city) {
                    cities.add(city);
                    // For minor events, we'll use a simplified approach since they don't have visible tags
                    if (!allTagsMap.has(city)) {
                        allTagsMap.set(city, new Set());
                    }
                }
            });
            
            // Populate city dropdown
            Array.from(cities).sort().forEach(city => {
                const option = document.createElement('option');
                option.value = city;
                option.textContent = city;
                cityFilter.appendChild(option);
            });
            
            // Store the tags map for dynamic filtering
            window.cityTagsMap = allTagsMap;
            
            // Initially populate all unique tags
            updateTagFilter();
        }
        
        // Update tag filter based on selected cities
        function updateTagFilter() {
            const cityFilter = document.getElementById('cityFilter');
            const tagFilter = document.getElementById('tagFilter');
            const selectedCities = Array.from(cityFilter.selectedOptions).map(option => option.value).filter(v => v);
            
            // Clear existing options
            tagFilter.innerHTML = '';
            
            let tagsToShow = new Set();
            
            if (selectedCities.length > 0 && window.cityTagsMap) {
                // Show only tags for selected cities
                selectedCities.forEach(city => {
                    if (window.cityTagsMap.has(city)) {
                        window.cityTagsMap.get(city).forEach(tag => tagsToShow.add(tag));
                    }
                });
            } else {
                // Show all tags from all cities
                if (window.cityTagsMap) {
                    window.cityTagsMap.forEach(cityTags => {
                        cityTags.forEach(tag => tagsToShow.add(tag));
                    });
                }
            }
            
            // Populate tag dropdown
            Array.from(tagsToShow).sort().forEach(tag => {
                const option = document.createElement('option');
                option.value = tag;
                option.textContent = tag;
                tagFilter.appendChild(option);
            });
        }
        
        // Filter events
        function filterEvents() {
            const cityFilter = document.getElementById('cityFilter');
            const tagFilter = document.getElementById('tagFilter');
            
            const selectedCities = Array.from(cityFilter.selectedOptions).map(option => option.value).filter(v => v);
            const selectedTags = Array.from(tagFilter.selectedOptions).map(option => option.value).filter(v => v);
            
            // Filter main event cards
            const eventCards = document.querySelectorAll('.event-card[data-city]');
            eventCards.forEach(card => {
                const city = card.getAttribute('data-city');
                
                let showCard = true;
                
                // Filter by cities (skip "Multiple" for minor events tiles)
                if (selectedCities.length > 0 && city !== 'Multiple') {
                    if (!selectedCities.includes(city)) {
                        showCard = false;
                    }
                }
                
                // Filter by tags - check actual visible tag spans
                if (selectedTags.length > 0) {
                    const tagSpans = card.querySelectorAll('.event-tags .tag');
                    let hasMatchingTag = false;
                    
                    tagSpans.forEach(span => {
                        const tagText = span.textContent.trim();
                        if (selectedTags.includes(tagText)) {
                            hasMatchingTag = true;
                        }
                    });
                    
                    if (!hasMatchingTag) {
                        showCard = false;
                    }
                }
                
                if (showCard) {
                    card.classList.remove('hidden');
                } else {
                    card.classList.add('hidden');
                }
            });
            
            // Filter individual items within minor events tiles
            const minorEventItems = document.querySelectorAll('.minor-event-item[data-city]');
            minorEventItems.forEach(item => {
                const city = item.getAttribute('data-city');
                const tags = item.getAttribute('data-tags');
                
                let showItem = true;
                
                // Filter by cities
                if (selectedCities.length > 0) {
                    if (!selectedCities.includes(city)) {
                        showItem = false;
                    }
                }
                
                // Filter by tags
                if (selectedTags.length > 0) {
                    let hasMatchingTag = false;
                    if (tags) {
                        selectedTags.forEach(tag => {
                            if (tags.includes(tag)) {
                                hasMatchingTag = true;
                            }
                        });
                    }
                    if (!hasMatchingTag) {
                        showItem = false;
                    }
                }
                
                if (showItem) {
                    item.style.display = 'block';
                } else {
                    item.style.display = 'none';
                }
            });
            
            // Hide minor events tiles if no items are visible
            document.querySelectorAll('.minor-events').forEach(tile => {
                const visibleItems = tile.querySelectorAll('.minor-event-item[style="display: block"], .minor-event-item:not([style*="display: none"])');
                if (selectedCities.length > 0 || selectedTags.length > 0) {
                    if (visibleItems.length === 0) {
                        tile.classList.add('hidden');
                    } else {
                        tile.classList.remove('hidden');
                    }
                }
            });
        }
        
        // Reset filters
        function resetFilters() {
            const cityFilter = document.getElementById('cityFilter');
            const tagFilter = document.getElementById('tagFilter');
            
            // Clear all selections
            Array.from(cityFilter.options).forEach(option => option.selected = false);
            Array.from(tagFilter.options).forEach(option => option.selected = false);
            
            // Show all events
            document.querySelectorAll('.event-card').forEach(card => {
                card.classList.remove('hidden');
            });
            
            // Show all minor event items
            document.querySelectorAll('.minor-event-item').forEach(item => {
                item.style.display = 'block';
            });
            
            // Show all minor events tiles
            document.querySelectorAll('.minor-events').forEach(tile => {
                tile.classList.remove('hidden');
            });
            
            // Update tag filter to show all tags again
            updateTagFilter();
        }
        
        // Initialize filters on page load
        document.addEventListener('DOMContentLoaded', function() {
            populateFilters();
            
            // Add event listeners for filters
            document.getElementById('cityFilter').addEventListener('change', function() {
                updateTagFilter();
                filterEvents();
            });
            document.getElementById('tagFilter').addEventListener('change', filterEvents);
        });

        // Smooth scrolling for anchor links
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const target = document.querySelector(this.getAttribute('href'));
                if (target) {
                    target.scrollIntoView({
                        behavior: 'smooth',
                        block: 'start'
                    });
                }
            });
        });

        // Scroll to top functionality
        const scrollToTopBtn = document.getElementById('scrollToTop');
        
        window.addEventListener('scroll', function() {
            if (window.pageYOffset > 300) {
                scrollToTopBtn.classList.add('visible');
            } else {
                scrollToTopBtn.classList.remove('visible');
            }
        });
        
        scrollToTopBtn.addEventListener('click', function() {
            window.scrollTo({
                top: 0,
                behavior: 'smooth'
            });
        });
    </script>
</body>
</html>
